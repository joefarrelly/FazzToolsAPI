# Generated by Django 3.2.8 on 2021-10-24 17:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alt',
            fields=[
                ('altId', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('altLevel', models.PositiveSmallIntegerField()),
                ('altName', models.CharField(max_length=40)),
                ('altRealm', models.CharField(max_length=40)),
                ('altRealmId', models.PositiveSmallIntegerField()),
                ('altRealmSlug', models.CharField(max_length=40)),
                ('altClass', models.PositiveSmallIntegerField(choices=[(0, 'No Class'), (1, 'Warrior'), (2, 'Paladin'), (3, 'Hunter'), (4, 'Rogue'), (5, 'Priest'), (6, 'Death Knight'), (7, 'Shaman'), (8, 'Mage'), (9, 'Warlock'), (10, 'Monk'), (11, 'Druid'), (12, 'Demon Hunter')], default=0)),
                ('altRace', models.PositiveSmallIntegerField(choices=[(0, 'No Race'), (1, 'Human'), (2, 'Orc'), (3, 'Dwarf'), (4, 'Night Elf'), (5, 'Undead'), (6, 'Tauren'), (7, 'Gnome'), (8, 'Troll'), (9, 'Goblin'), (10, 'Blood Elf'), (11, 'Draenei'), (22, 'Worgen'), (24, 'Pandaren'), (25, 'Pandaren'), (26, 'Pandaren'), (27, 'Nightbourne'), (28, 'Highmountain Tauren'), (29, 'Void Elf'), (30, 'Lightforged Draenei'), (31, 'Zandalari Troll'), (32, 'Kul Tiran'), (34, 'Dark Iron Dwarf'), (35, 'Vulpera'), (36, "Mag'ar Orc"), (37, 'Mechagnome')], default=0)),
                ('altGender', models.CharField(max_length=6)),
                ('altFaction', models.CharField(max_length=10)),
                ('altExpiryDate', models.DateTimeField()),
            ],
            options={
                'db_table': 'ft_alt',
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('equipmentId', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('equipmentName', models.CharField(max_length=80)),
                ('stamina', models.PositiveSmallIntegerField()),
                ('armour', models.PositiveSmallIntegerField()),
                ('strength', models.PositiveSmallIntegerField()),
                ('agility', models.PositiveSmallIntegerField()),
                ('intellect', models.PositiveSmallIntegerField()),
                ('haste', models.PositiveSmallIntegerField()),
                ('mastery', models.PositiveSmallIntegerField()),
                ('vers', models.PositiveSmallIntegerField()),
                ('crit', models.PositiveSmallIntegerField()),
                ('equipmentLevel', models.PositiveSmallIntegerField()),
                ('equipmentQuality', models.CharField(max_length=20)),
                ('equipmentType', models.CharField(max_length=20)),
                ('equipmentSlot', models.CharField(max_length=20)),
                ('equipmentIcon', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'ft_equipment',
            },
        ),
        migrations.CreateModel(
            name='FazzToolsUser',
            fields=[
                ('userId', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'ft_fazztoolsuser',
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('professionId', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('professionName', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'ft_profession',
            },
        ),
        migrations.CreateModel(
            name='AltEquipment',
            fields=[
                ('alt', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='apicore.alt')),
                ('head', models.PositiveSmallIntegerField()),
                ('neck', models.PositiveSmallIntegerField()),
                ('shoulder', models.PositiveSmallIntegerField()),
                ('back', models.PositiveSmallIntegerField()),
                ('chest', models.PositiveSmallIntegerField()),
                ('tabard', models.PositiveSmallIntegerField()),
                ('shirt', models.PositiveSmallIntegerField()),
                ('wrist', models.PositiveSmallIntegerField()),
                ('hands', models.PositiveSmallIntegerField()),
                ('belt', models.PositiveSmallIntegerField()),
                ('legs', models.PositiveSmallIntegerField()),
                ('feet', models.PositiveSmallIntegerField()),
                ('ring1', models.PositiveSmallIntegerField()),
                ('ring2', models.PositiveSmallIntegerField()),
                ('trinket1', models.PositiveSmallIntegerField()),
                ('trinket2', models.PositiveSmallIntegerField()),
                ('weapon1', models.PositiveSmallIntegerField()),
                ('weapon2', models.PositiveSmallIntegerField()),
                ('altEquipmentExpiryDate', models.DateTimeField()),
            ],
            options={
                'db_table': 'ft_altequipment',
            },
        ),
        migrations.CreateModel(
            name='AltProfession',
            fields=[
                ('alt', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='apicore.alt')),
                ('profession1', models.PositiveIntegerField(choices=[(0, 'Missing'), (171, 'Alchemy'), (164, 'Blacksmithing'), (333, 'Enchanting'), (202, 'Engineering'), (773, 'Inscription'), (755, 'Jewelcrafting'), (165, 'Leatherworking'), (197, 'Tailoring'), (182, 'Herbalism'), (186, 'Mining'), (393, 'Skinning')], default=0)),
                ('profession2', models.PositiveIntegerField(choices=[(0, 'Missing'), (171, 'Alchemy'), (164, 'Blacksmithing'), (333, 'Enchanting'), (202, 'Engineering'), (773, 'Inscription'), (755, 'Jewelcrafting'), (165, 'Leatherworking'), (197, 'Tailoring'), (182, 'Herbalism'), (186, 'Mining'), (393, 'Skinning')], default=0)),
                ('altProfessionExpiryDate', models.DateTimeField()),
            ],
            options={
                'db_table': 'ft_altprofession',
            },
        ),
        migrations.CreateModel(
            name='ProfessionTier',
            fields=[
                ('tierId', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('tierName', models.CharField(max_length=50)),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apicore.profession')),
            ],
            options={
                'db_table': 'ft_professiontier',
            },
        ),
        migrations.CreateModel(
            name='ProfessionRecipe',
            fields=[
                ('recipeId', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('recipeName', models.CharField(max_length=50)),
                ('professionTier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apicore.professiontier')),
            ],
            options={
                'db_table': 'ft_professionrecipe',
            },
        ),
        migrations.AddField(
            model_name='alt',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apicore.fazztoolsuser'),
        ),
        migrations.CreateModel(
            name='AltProfessionData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('altProfessionDataExpiryDate', models.DateTimeField()),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apicore.profession')),
                ('professionRecipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apicore.professionrecipe')),
                ('professionTier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apicore.professiontier')),
                ('alt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apicore.altprofession')),
            ],
            options={
                'db_table': 'ft_altprofessiondata',
            },
        ),
        migrations.CreateModel(
            name='AltEquipmentData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('altEquipmentDataExpiryDate', models.DateTimeField()),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apicore.equipment')),
                ('alt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apicore.altequipment')),
            ],
            options={
                'db_table': 'ft_altequipmentdata',
            },
        ),
        migrations.AddConstraint(
            model_name='alt',
            constraint=models.UniqueConstraint(fields=('altName', 'altRealmSlug'), name='unique_alt'),
        ),
        migrations.AddConstraint(
            model_name='altprofessiondata',
            constraint=models.UniqueConstraint(fields=('alt', 'profession', 'professionTier', 'professionRecipe'), name='unique_altprofessiondata'),
        ),
        migrations.AddConstraint(
            model_name='altequipmentdata',
            constraint=models.UniqueConstraint(fields=('alt', 'equipment'), name='unique_altequipmentdata'),
        ),
    ]
